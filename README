*********************************************
port threadx demo to stm32 project
0)add threadx demo to your project
1)select soucre code to build for your board
	# source director
	THREADX_SRC_DIR      = $(THREADX_DIR)
	THREADX_SRC_PORT_DIR = $(THREADX_DIR)/ports/cortex_m3/gnu
	THREADX_INC_PORT_DIR = $(THREADX_DIR)/ports/cortex_m3/gnu/inc
	THREADX_SRC_COMM_DIR = $(THREADX_DIR)/common
	THREADX_INC_COMM_DIR = $(THREADX_DIR)/common/inc

	# include directories
	INCLUDE_DIRS += $(THREADX_INC_COMM_DIR)
	INCLUDE_DIRS += $(THREADX_INC_PORT_DIR)

	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_context_restore.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_context_save.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_interrupt_control.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_schedule.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_stack_build.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_thread_system_return.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_timer_interrupt.S
	SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_initialize_low_level_sample.S
	#SRC  += $(THREADX_SRC_PORT_DIR)/src/tx_vector_table_sample.S

	# add freertos source
	SRC  += ${THREADX_SRC_COMM_DIR}/src/tx_block_allocate.c
	SRC  += ${THREADX_SRC_COMM_DIR}/src/tx_block_pool_cleanup.c
	SRC  += ${THREADX_SRC_COMM_DIR}/src/tx_block_pool_create.c
	SRC  += ${THREADX_SRC_COMM_DIR}/src/tx_block_pool_delete.c
	......
2)fix error for undefined reference to `__initial_sp'
	please refer to stm32_flash.ld() to get more information
3)fix error for undefined reference to `__Vectors'
	please refer to stm32f10x_lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_hd.s to get more information

*********************************************


*********************************************
0)HW
STM32F103VET6

1)build environment
gcc-arm-none-eabi-5_4-2016q3(https://launchpad.net/gcc-arm-embedded)

2)buidl project
### build project

```
$ make
```

### clean project

```
$ make clean
```

### download to mcu by stlink
```
$ make flash
```

### erase flash
```
$ make erase
```

### download main.bin to mcu
```
$ ./build.sh
```

## Debug base on st-link

start debug
```
$ st-util
```

open shell in project root dir
```
$ arm-none-eabi-gdb *.elf

3)download
STM32-LINK Utility(program)

4)uart log
uart2:PA2,PA3
*********************************************

